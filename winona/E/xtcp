#!/usr/bin/env python3

import socketserver
import json
from json_stream_parser import load_iter
import io
import time
from sys import argv


def transform(objs):
    first_json = {"count": len(objs), "seq": objs}
    second_json = [len(objs)]
    second_json.extend(objs[::-1])
    return json.dumps(first_json), json.dumps(second_json)


def retrieve_input(data):
    objs = [obj for obj in load_iter(data)]
    return objs


class MyTCPHandler(socketserver.BaseRequestHandler):

    def handle(self):
        self.request.settimeout(3)
        self.data = self.request.recv(1024).strip().decode('utf-8')
        first_json, second_json = transform(retrieve_input(io.StringIO(self.data)))
        self.request.sendall(bytes(first_json + '\n' + second_json + '\n', 'utf-8'))


class MyServer(socketserver.TCPServer):
    timeout = 3

    def __init__(self, serverAddress, RequestHandlerClass):
        socketserver.TCPServer.__init__(self, serverAddress, RequestHandlerClass)

    def handle_timeout(self):
        print('{} - Timeout'.format(time.strftime('%d.%m.%Y %H:%M:%S', time.localtime())))


if __name__ == "__main__":

    HOST = "login-students.ccs.neu.edu"
    PORT = int(argv[1]) if len(argv) > 1 else 45678

    with MyServer((HOST, PORT), MyTCPHandler) as server:
        server.handle_request()
